/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package inventariocliente.UID;
import inventariocliente.util.InventarioCliente;
import javax.swing.JOptionPane;
import java.io.IOException;
/**
 *
 * @author User
 */
public class VentanaPrincipal extends javax.swing.JFrame {
    private InventarioCliente gestor;
    private boolean control;
    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
        control=false;
    }
    public void setInventarioCliente (InventarioCliente gestor){
        this.gestor=gestor;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bAgregar = new javax.swing.JButton();
        bEliminar = new javax.swing.JButton();
        bActualizar = new javax.swing.JButton();
        bBuscar = new javax.swing.JButton();
        bExportar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        bAgregar.setText("Agregar Producto");
        bAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAgregarActionPerformed(evt);
            }
        });

        bEliminar.setText("Eliminar Producto");
        bEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEliminarActionPerformed(evt);
            }
        });

        bActualizar.setText("Actualizar Producto");
        bActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bActualizarActionPerformed(evt);
            }
        });

        bBuscar.setText("Buscar Producto");
        bBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBuscarActionPerformed(evt);
            }
        });

        bExportar.setText("Exportar Inventario");
        bExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExportarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI Symbol", 1, 24)); // NOI18N
        jLabel2.setText("Virtual Store");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bAgregar)
                    .addComponent(bEliminar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bActualizar))
                    .addComponent(bExportar))
                .addGap(51, 51, 51))
            .addGroup(layout.createSequentialGroup()
                .addGap(178, 178, 178)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bAgregar)
                    .addComponent(bActualizar)
                    .addComponent(bBuscar))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bExportar)
                    .addComponent(bEliminar))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAgregarActionPerformed
    if (control) {
        JOptionPane.showMessageDialog(null, "Ya hay un proceso ejecutándose", "Error", JOptionPane.ERROR_MESSAGE);
    } else {
        control = true;
        Agregar dialogo = new Agregar(this, true, gestor);
        dialogo.setVisible(true);
        control = false;
    }
    }//GEN-LAST:event_bAgregarActionPerformed

    private void bEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEliminarActionPerformed
    if (control) {
        JOptionPane.showMessageDialog(null, "Ya hay un proceso ejecutándose", "Error", JOptionPane.ERROR_MESSAGE);
    } else {
        control = true;
        Eliminar dialogo = new Eliminar(this, true, gestor);
        dialogo.setVisible(true);
        control = false;
    }
    }//GEN-LAST:event_bEliminarActionPerformed

    private void bActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bActualizarActionPerformed
    if (control) {
        JOptionPane.showMessageDialog(null, "Ya hay un proceso ejecutándose", "Error", JOptionPane.ERROR_MESSAGE);
    } else {
        control = true;
        Actualizar dialogo = new Actualizar(this, true, gestor);
        dialogo.setVisible(true);
        control = false;
    }
    }//GEN-LAST:event_bActualizarActionPerformed

    private void bBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBuscarActionPerformed
    if (control) {
        JOptionPane.showMessageDialog(null, "Ya hay un proceso ejecutándose", "Error", JOptionPane.ERROR_MESSAGE);
    } else {
        control = true;
        Buscar dialogo = new Buscar(this, true, gestor);
        dialogo.setVisible(true);
        control = false;
    }
    }//GEN-LAST:event_bBuscarActionPerformed

    private void bExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExportarActionPerformed
    if (control) {
        JOptionPane.showMessageDialog(null, "Ya hay un proceso ejecutándose", "Error", JOptionPane.ERROR_MESSAGE);
    } else {
        control = true;
        Inventario dialogo = new Inventario(this, true, gestor);
        dialogo.setVisible(true);
        control = false;
    }
    }//GEN-LAST:event_bExportarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        javax.swing.SwingUtilities.invokeLater(() -> {
            try {
                if (args.length < 2) {
                    JOptionPane.showMessageDialog(null, "Debe proporcionar la dirección y el puerto del servidor como argumentos.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                String host = args[0];
                int port = Integer.parseInt(args[1]);

                InventarioCliente gestor = new InventarioCliente(host, port);
                VentanaPrincipal ventana = new VentanaPrincipal();
                ventana.setInventarioCliente(gestor);
                ventana.setSize(710, 480);
                ventana.setVisible(true);
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, "Error al conectar con el servidor: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        });
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bActualizar;
    private javax.swing.JButton bAgregar;
    private javax.swing.JButton bBuscar;
    private javax.swing.JButton bEliminar;
    private javax.swing.JButton bExportar;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
